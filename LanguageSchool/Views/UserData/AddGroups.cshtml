@model LanguageSchool.Models.ViewModels.UsersGroupViewModel

@{
    ViewBag.Title = "AddUsers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.UserId)

    @Html.AntiForgeryToken()

    <div class="container">
        @{ Html.RenderPartial("_PartHeader", "Grupy dostępne"); }
        <div class="row">
            <div class="bordered col-md-12">
                <table class="table table-bordered">
                    <tr>
                        <th>
                            Nazwa
                        </th>
                        <th>
                            Godziny
                        </th>
                    </tr>

                    @for (int i = 0; i < @Model.GroupsAvaible.Count; i++)
                    {
                        @Html.HiddenFor(model => model.GroupsAvaible[i].GroupId)
                        <tr>
                            <td>
                                <p><strong>@Model.GroupsAvaible[i].Fullname</strong></p>
                                <p style="color: lightgray;">@Model.GroupsAvaible[i].StartDate - @Model.GroupsAvaible[i].EndDate</p>
                            </td>
                            <td>
                                @foreach (var hour in @Model.GroupsAvaible[i].Hours)
                                {
                                    <p>@hour.DateFullName</p>
                                }
                            </td>
                            <td>
                                <label class="btn btn-default btn-block">
                                    Zapisz
                                    <input class="btn btn-default btn-block" style="display:none" type="submit" name="submit" value="@Model.GroupsAvaible[i].GroupId.ToString()" />
                                </label>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        @{ Html.RenderPartial("_PartHeader", "Grupy niedostępne"); }
        <div class="row">
            <div class="bordered col-md-12">
                <table class="table table-bordered">
                    <tr>
                        <th>
                            Nazwa
                        </th>
                        <th>
                            Godziny
                        </th>
                    </tr>

                    @for (int i = 0; i < @Model.GroupsNonavaible.Count; i++)
                {
                        <tr>
                            <td>
                                @Model.GroupsNonavaible[i].Fullname
                            </td>
                            <td>
                                @foreach (var hour in @Model.GroupsNonavaible[i].Hours)
                                {
                                    string shown = hour.DateFullName;
                                    string style = null;

                                    if (hour.IsBlocked)
                                    {
                                        style = "color:red;";
                                        shown += " [" + hour.ConflictingDateFullName + "]";
                                    }
                                    <p style="@style">
                                        @shown
                                    </p>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
