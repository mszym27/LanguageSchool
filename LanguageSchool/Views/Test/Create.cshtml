@model LanguageSchool.Models.ViewModels.TestViewModel

@{
    ViewBag.Title = "Utwórz test";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.GroupId)

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">
        @Html.Partial("_PartHeader", "Utwórz test dla grupy")
        <div class="row">
            <div class="bordered col-md-12">
                <div class="col-md-6">
                    <div class="form-group col-md-12">
                        <div class="control-label col-md-2">
                            <strong>Nazwa</strong>
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="control-label col-md-2">
                            <strong>Aktywny</strong>
                        </div>
                        <div class="col-md-4">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="control-label col-md-2">
                        <strong>Opis</strong>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "widetextarea form-control", @style="width:375px" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        @Html.Partial("_PartHeader", "Wybierz tematy dla testu")
        <div class="row">
            <div class="bordered col-md-12">
                <div class="btn-group-toggle" data-toggle="buttons">
                    <table class="table table-bordered">
                        <tr>
                            <th>
                                Nazwa
                            </th>
                            <th>
                                Opis
                            </th>
                            <th>
                                Liczba zamkniętych pytań
                            </th>
                            <th>
                                Liczba otwartych pytań
                            </th>
                            <th>
                                Wybierz
                            </th>
                        </tr>

                        @for (var i = 0; i < Model.LessonSubjects.Count; i++)
                        {
                            @Html.HiddenFor(model => model.LessonSubjects[i].Id)
                            @Html.HiddenFor(model => model.LessonSubjects[i].GroupId)
                            @Html.HiddenFor(model => model.LessonSubjects[i].MaxNumberOfClosedQuestions, new { id = "numberClosed" + i })
                            @Html.HiddenFor(model => model.LessonSubjects[i].MaxNumberOfOpenQuestions, new { id = "numberOpen" + i })

                            if (Model.LessonSubjects[i].MaxNumberOfClosedQuestions != 0
                                || Model.LessonSubjects[i].MaxNumberOfOpenQuestions != 0)
                            {
                                <tr style="background:whitesmoke;color:silver" id="@i">
                                    <td>
                                        @Model.LessonSubjects[i].Name
                                        @Html.HiddenFor(model => model.LessonSubjects[i].Name)
                                    </td>
                                    <td>
                                        @Model.LessonSubjects[i].Description
                                        @Html.HiddenFor(model => model.LessonSubjects[i].Description)
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.LessonSubjects[i].NumberOfClosedQuestions
                                            , new { htmlAttributes = new { @disabled = "disabled" } }) \ 
                                        @Model.LessonSubjects[i].MaxNumberOfClosedQuestions
                                        <p/>
                                        @Html.ValidationMessageFor(model => model.LessonSubjects[i].NumberOfClosedQuestions, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.LessonSubjects[i].NumberOfOpenQuestions
                                            , new { htmlAttributes = new { @disabled = "disabled" } }) \ 
                                        @Model.LessonSubjects[i].MaxNumberOfOpenQuestions
                                        <p/>
                                        @Html.ValidationMessageFor(model => model.LessonSubjects[i].NumberOfOpenQuestions, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <label class="btn btn-default btn-block" onclick="enableRow(@i)">
                                            <label style="display: none">
                                                @Html.EditorFor(model => model.LessonSubjects[i].IsMarked)
                                            </label>
                                            Wybierz
                                        </label>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </div>
        </div>
        <div class="row col-md-12">
            <div class="col-md-2 col-md-offset-10">
                <input type="submit" value="Utwórz" class="btn btn-block btn-default" />
            </div>
        </div>
    </div>
}


<script>
    function enableRow(rowId) {
        var row = document.getElementById(rowId),
            numberClosed = document.getElementById("numberClosed" + rowId),
            numberOpen = document.getElementById("numberOpen" + rowId),
            answerClosed = document.getElementById("LessonSubjects_" + rowId + "__NumberOfClosedQuestions"),
            answerOpen = document.getElementById("LessonSubjects_" + rowId + "__NumberOfOpenQuestions");

        if (row.style.color == "black") {
            row.style.background = "whitesmoke";
            row.style.color = "silver";

            answerClosed.disabled = true;
            answerOpen.disabled = true;
        }
        else {
            row.style.background = "white";
            row.style.color = "black";

            if(numberClosed.value != 0) {
                answerClosed.disabled = false;
            }

            if(numberOpen.value != 0) {
                answerOpen.disabled = false;
            }
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
