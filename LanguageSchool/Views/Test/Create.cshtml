@model LanguageSchool.Models.ViewModels.TestViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">
        <div class="row col-md-12">
            <div class="thumbnail col-md-2">
                <input type="submit" value="Utwórz" class="btn btn-block btn-default" />
            </div>
        </div>

        <div class="row col-md-12 thumbnail">
            <div class="row">
                <div class="form-group col-md-4">
                    <div class="control-label col-md-5">
                        <strong>Punkty</strong>
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    <div class="control-label col-md-5">
                        <strong>Liczba pytań</strong>
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NumberOfQuestions, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfQuestions, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="control-label col-md-2">
                        <strong>Nazwa</strong>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    <div class="control-label col-md-5">
                        <strong>Liczba pytań otwartych</strong>
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NumberOfOpenQuestions, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfOpenQuestions, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div class="control-label col-md-5">
                        <strong>Liczba pytań zamkniętych</strong>
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NumberOfClosedQuestions, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfClosedQuestions, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="control-label col-md-2">
                        <strong>Opis</strong>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row thumbnail col-md-12">
            <table class="table table-striped table-bordered">
                <tr>
                    <th>
                        Nazwa
                    </th>
                    <th>
                        Opis
                    </th>
                </tr>
                @for (var i = 0; i < Model.LessonSubjects.Count; i++)
                {
                    <tr>
                        <td>
                            @Model.LessonSubjects[i].Name
                        </td>
                        <td>
                            @Model.LessonSubjects[i].Description
                        </td>
                        <td>
                            <div class="checkbox">
                                @Html.EditorFor(model => model.LessonSubjects[i].IsMarked)
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
