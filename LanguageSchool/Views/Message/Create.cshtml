@model LanguageSchool.Models.ViewModels.UserMessageViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Typ wiadomości</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MessageTypeId, Model.MessageTypes, new { @class = "form-control", @onchange = "MessageTypeChanged(this.value)" })
            </div>
        </div>
        <div id="1" class="form-group" style="display: block">
            <div class="control-label col-md-2">
                <strong>Użytkownik</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId, Model.Users, new { @class = "form-control" })
            </div>
        </div>
        <div id="2" class="form-group" style="display: none">
            <div class="control-label col-md-2">
                <strong>Grupa</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GroupId, Model.Groups, new { @class = "form-control" })
            </div>
        </div>
        <div id="3" class="form-group" style="display: none">
            <div class="control-label col-md-2">
                <strong>Kurs</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseId, Model.Courses, new { @class = "form-control" })
            </div>
        </div>
        <div id="4" class="form-group" style="display: none">
            <div class="control-label col-md-2">
                <strong>Rola</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId, Model.Roles, new { @class = "form-control" })
            </div>
        </div>
        <script>
            function MessageTypeChanged(Id)
            {
                var element;
                var i;

                for (i = 1; i <= 4; i++) {
                    element = document.getElementById(i);

                    element.style.display = "none";
                }

                var visibleElement = document.getElementById(Id);

                visibleElement.style.display = "block";
            }
        </script>
        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Wiadomość systemowa</strong>
            </div>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSystem)
                    @Html.ValidationMessageFor(model => model.IsSystem, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Temat</strong>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Treść</strong>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Wyślij" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
