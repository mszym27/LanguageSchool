@model LanguageSchool.Models.Course

@{
    ViewBag.Title = "Kurs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    @{ Html.RenderPartial("_PartHeader", "Dane kursu"); }
    <div class="row thumbnail col-md-12">
        <div class="row form-group">
            <div class="control-label col-md-2">
                <strong>Nazwa</strong>
            </div>
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Name)
            </div>

            <div class="control-label col-md-2">
                <strong>Poziom</strong>
            </div>
            <div class="col-md-4">
                @Html.DisplayFor(model => model.LanguageProficency.Name)
            </div>
        </div>

        <div class="row form-group">
            <div class="control-label col-md-2">
                <strong>Liczba godzin</strong>
            </div>
            <div class="col-md-4">
                @Html.DisplayFor(model => model.NumberOfHours)
            </div>

            <div class="control-label col-md-2">
                <strong>Aktywny</strong>
            </div>
            <div class="col-md-4">
                @{
                    string active = "nie";

                    if (Model.IsActive) { active = "tak"; }
                }

                @active
            </div>
        </div>

        <div class="row form-group">
            <div class="control-label col-md-2">
                <strong>Data rozpoczęcia</strong>
            </div>
            <div class="col-md-4">
                @Model.StartDate.ToString("yyyy/MM/dd")
            </div>

            <div class="control-label col-md-2">
                <strong>Data zakończenia</strong>
            </div>
            <div class="col-md-4">
                @Model.EndDate.ToString("yyyy/MM/dd")
            </div>
        </div>

        <div class="row form-group">
            <div class="col-md-6">
            </div>
            <div class="control-label col-md-2">
                <strong>Opis</strong>
            </div>
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Description)
            </div>
        </div>
    </div>

    <div class="row col-md-12">
        <div class="col-md-6">
        </div>
        <div class="col-md-6">
            <div class="col-md-3">
                <button class="btn btn-block btn-default" type="button" onclick="location.href='@Url.Action("Edit", "Course")'">Edytuj</button>
            </div>
            <div class="col-md-3">
                @{
                    var activateButtonValue = "Aktywuj";

                    if (@Model.IsActive)
                    {
                        activateButtonValue = "Dezaktywuj";
                    }
                }
                <button class="btn btn-block btn-default" type="button" onclick="location.href='@Url.Action("DeActivate", "Course", new { id = Model.Id })'">@activateButtonValue</button>
            </div>
            <div class="col-md-3">
                <button class="btn btn-block btn-danger" type="button" onclick="location.href='@Url.Action("Edit", "Course")'">Usuń</button>
            </div>
            <div class="col-md-3">
                <button class="btn btn-block btn-primary" type="button" onclick="location.href='@Url.Action("Create", "Group")'">Dodaj grupę</button>
            </div>
        </div>
    </div>
    @if (Model.Groups.Any())
    {
        <p />
        <div class="row col-md-12">
            <div class="col-md-4">
                @{ Html.RenderPartial("_PartHeader", "Grupy przypisane do kursu"); }
            </div>
        </div>
        <div class="row thumbnail col-md-12">
            <table class="table table-striped table-bordered">
                <tr>
                    <th>
                        Utworzono
                    </th>
                    <th>
                        Nazwa
                    </th>
                    <th>
                        Prowadzący
                    </th>
                </tr>
                @foreach (var group in Model.Groups)
                {
                    var teacher = group.UsersGroups.Where(ug => !ug.IsDeleted && ug.User.RoleId == (int)Consts.Roles.Teacher).FirstOrDefault().User;
                    <tr>
                        <td>
                            @group.CreationDate.ToString("yyyy/MM/dd")
                        </td>
                        <td>
                            @Html.ActionLink(group.Name, "FullDetails", "Group", new { id = group.Id }, null)
                        </td>
                        <td>
                            @teacher.UserData.FirstOrDefault().Name @teacher.UserData.FirstOrDefault().Surname (@teacher.Login)
                        </td>
                    </tr>
                }
            </table>
        </div>
    }
</div>