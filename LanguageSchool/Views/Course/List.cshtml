@using PagedList.Mvc;
@using LanguageSchool.Models.ViewModels;

@model PagedList.IPagedList<LanguageSchool.Models.Course>

@{
    ViewBag.Title = "SecretaryIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    @using (Html.BeginForm())
    {
        var toFirst = Url.Action("List", new
                {
                    sortColumn = "startDate",
                    sortDirection = "asc",
                    searchString = ViewBag.searchString,
                    showActivated = ViewBag.showActivated,
                    showDeactivated = ViewBag.showDeactivated,
                    page = 1
                });

        <div class="row">
            <div class="bordered col-md-12">
                <div class="col-md-3">
                    @Html.Label("Kursy:")
                    <font color="gray">
                        aktywne @Html.CheckBox("showActivated", (bool)ViewBag.showActivated, new { @id = "showActivated" })
                        nieaktywne @Html.CheckBox("showDeactivated", (bool)ViewBag.showDeactivated, new { @id = "showDeactivated" })
                    </font>
                </div>
                <div class="col-md-9">
                    @Html.Label("Szukana w tabeli fraza:")
                    @Html.TextBox("searchString", (string)ViewBag.searchString,
                       new
                       {
                           @id = "searchString",
                           @class = "widetextarea",
                           @style = "width:620px",
                           placeholder = "Szukaj w polach Nazwa kursu, Opis, Poziom i Liczba godzin"
                       }
                    )
                </div>
            </div>

            <p />

            <div class="row col-md-12">
                <div class="col-md-10">
                    @Html.PagedListPager(Model, page => Url.Action("List",
                        new
                        {
                            sortColumn = ViewBag.sortColumn,
                            sortDirection = ViewBag.sortDirection,
                            searchString = ViewBag.searchString,
                            showActivated = ViewBag.showActivated,
                            showDeactivated = ViewBag.showDeactivated,
                            page
                        }
                    ))
                </div>
                <div class="col-md-1">
                    <button formaction= @toFirst formmethod = "post" class="btn btn-default" onclick="ResetForms()">Wyczyść</button>
                </div>
                <div class="col-md-1" style="float:right">
                    <button class="btn btn-default" formaction= @toFirst formmethod = "post">Szukaj</button>
                </div>
            </div>
        </div>
    }

    <p />

    <div class="row">
        <div class="bordered col-md-12">
            <table class="table table-striped table-bordered">
                <tr>
                    <th>
                        @Html.Partial("_CourseTabSortHeader", new TableHeaderViewModel("Utworzono", "creationDate"))
                    </th>
                    <th>
                        @Html.Partial("_CourseTabSortHeader", new TableHeaderViewModel("Nazwa kursu", "name"))
                    </th>
                    <th>
                        Opis
                    </th>
                    <th>
                        @Html.Partial("_CourseTabSortHeader", new TableHeaderViewModel("Poziom", "proficencyLevel"))
                    </th>
                    <th>
                        @Html.Partial("_CourseTabSortHeader", new TableHeaderViewModel("Rozpoczęcie", "startDate"))
                    </th>
                    <th>
                        @Html.Partial("_CourseTabSortHeader", new TableHeaderViewModel("Zakończenie", "endDate"))
                    </th>
                    <th>
                        Liczba godzin
                    </th>
                </tr>

                @foreach (var item in Model)
                {
                    var fontColor = "black";

                    if (!item.IsActive)
                    {
                        fontColor = "silver";
                    }

                    <tr style="color: @fontColor">
                        <td>
                            @item.CreationDate.ToString("yyyy/MM/dd")
                        </td>
                        <td>
                            @Html.ActionLink(item.Name, "FullDetails", new { id = item.Id })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LanguageProficency.PLName)
                        </td>
                        <td>
                            @item.StartDate.ToString("yyyy/MM/dd")
                        </td>
                        <td>
                            @item.EndDate.ToString("yyyy/MM/dd")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumberOfHours)
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>

<script>
    function ResetForms() {
        var search = document.getElementById("searchString");
        var showActivated = document.getElementById("showActivated");
        var showDeactivated = document.getElementById("showDeactivated");

        search.value = "";
        showActivated.checked = true;
        showDeactivated.checked = false;
    }
</script>