@using System;
@using System.Collections.Generic;
@using System.Data;
@using System.Data.Entity;
@using System.Linq;
@using System.Net;
@using System.Web;
@using System.Web.Mvc;
@using LanguageSchool.Models;
@using LanguageSchool.Models.ViewModels;

@model List<GroupTime>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row thumbnail col-md-12">
    <div class="btn-group-toggle" data-toggle="buttons">
        <table class="table table-bordered">
            <tr>
                <th class="text-center">
                </th>
                <th class="text-center">
                    Poniedziałek
                </th>
                <th class="text-center">
                    Wtorek
                </th>
                <th class="text-center">
                    Środa
                </th>
                <th class="text-center">
                    Czwartek
                </th>
                <th class="text-center">
                    Piątek
                </th>
                <th class="text-center">
                    Sobota
                </th>
                <th class="text-center">
                    Niedziela
                </th>
            </tr>

        @for (int i = 0; i < 12; i++)
        {
            var currentHour = i + 8 + ".15";
            var nextHour = (i + 8 + 1) + ".15";
            <tr>
                <td>@currentHour - @nextHour</td>
                @for (int j = 0; j < 7; j++)
                {
                    GroupTime current = Model.Where(gt => (gt.DayOfWeekId == (j + 1)) && !(gt.EndTime < i + 8) && !(gt.StartTime > i + 8)).FirstOrDefault();
                    if (current == null)
                    {
                        <td></td>
                    }
                    else
                    {
                        var style = "font-size: 10px;";
                        var show = true;

                        int color = 0;

                        foreach (var character in current.Group.Name)
                        {
                            color += (int)character;
                        }

                        color *= current.Group.Id;

                        foreach (var character in current.Group.Course.Name)
                        {
                            color += (int)character;
                        }

                        color *= current.Group.CourseId;

                        string hexColor = color.ToString("X");

                        if ((i + 8) > current.StartTime)
                        {
                            style += "border-top-style: none;";
                            show = false;
                        }

                        if (current.EndTime > (i + 8))
                        {
                            style += "border-bottom-style: none;";
                        }
                        <td align="center" bgcolor="@hexColor" style="@style">
                            <a href="@Url.Action("Redirect", "Group", new { id = current.Group.Id })" style = "text-decoration:none; color:black">
                                @if (show)
                                {
                                    <strong>@current.Group.Course.Name</strong>
                                }
                            </a>
                        </td>
                    }
                }
            </tr>
        }
        </table>
    </div>
</div>

<style type="text/css">
    td {
        width: 120px;
        max-height: 35px;
    }

    th {
        width: 120px;
        max-height: 35px;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}